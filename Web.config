<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="microsoft.web.services3" type="Microsoft.Web.Services3.Configuration.WebServicesConfiguration, Microsoft.Web.Services3, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="workflowRuntime" type="System.Workflow.Runtime.Configuration.WorkflowRuntimeSection, System.Workflow.Runtime, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="wftools.services.common.ado" type="WFTools.Services.Common.Ado.Configuration.CommonAdoProviderSettings,EPiServer.WFTools.Services" />
    <section name="wftools.services.persistence.ado" type="WFTools.Services.Persistence.Ado.Configuration.PersistenceAdoProviderSettings,EPiServer.WFTools.Services" />
    <section name="wftools.services.tracking.ado" type="WFTools.Services.Tracking.Ado.Configuration.TrackingAdoProviderSettings,EPiServer.WFTools.Services" />
    <section name="episerver" type="EPiServer.Configuration.EPiServerSection, EPiServer.Configuration, Version=6.1.379.0, Culture=neutral, PublicKeyToken=8fe83dea738b45b7" restartOnExternalChanges="true" />
    <section name="staticFile" type="EPiServer.Configuration.StaticFileSection, EPiServer.Configuration" allowLocation="true" />
    <section name="episerver.baseLibrary" allowDefinition="MachineToApplication" allowLocation="false" type="EPiServer.BaseLibrary.ConfigurationHandler,EPiServer.BaseLibrary" />
    <section name="episerver.basicAuthentication" type="EPiServer.Configuration.BasicAuthenticationSection, EPiServer.Configuration" allowLocation="true" />
    <sectionGroup name="episerverModules">
    </sectionGroup>
    <section name="episerver.shell" type="EPiServer.Shell.Configuration.EPiServerShellSection, EPiServer.Shell" />
    <section name="episerver.dataStore" type="EPiServer.Data.Configuration.EPiServerDataStoreSection, EPiServer.Data" />
    <section name="episerver.framework" type="EPiServer.Framework.Configuration.EPiServerFrameworkSection, EPiServer.Framework" restartOnExternalChanges="true" />
    <section name="episerver.search" type="EPiServer.Search.Configuration.SearchSection, EPiServer.ApplicationModules" />
  </configSections>
  <episerver configSource="episerver.config" />
  <staticFile expirationTime="12:0:0" />
  <episerver.baseLibrary>
    <classFactories>
      <add type="EPiServer.Implementation.DefaultBaseLibraryFactory, EPiServer.Implementation" id="ContentChannelFactory">
        <register type="EPiServer.ContentChannels.ContentChannelAdministration, EPiServer" mappedType="EPiServer.ContentChannels.ObjectStoreContentChannelAdministration, EPiServer" />
        <register type="EPiServer.BaseLibrary.IContentChannelHandler, EPiServer" mappedType="EPiServer.ContentChannels.ContentChannelHandler, EPiServer" />
      </add>
      <add type="EPiServer.Core.PropertyControlClassFactory, EPiServer" id="PropertyControlFactory">
        <!-- Uncomment the following two lines to get legacy editor in edit mode for PropertyXhtmlString and PropertyLongString-->
        <!--<register type="EPiServer.SpecializedProperties.PropertyXhtmlString, EPiServer" mappedType="EPiServer.Web.PropertyControls.LegacyPropertyXhtmlStringControl, EPiServer" />
        <register type="EPiServer.Core.PropertyLongString, EPiServer" mappedType="EPiServer.Web.PropertyControls.LegacyPropertyXhtmlStringControl, EPiServer" />-->
      </add>
    </classFactories>
  </episerver.baseLibrary>
  <workflowRuntime EnablePerformanceCounters="false">
    <Services>
      <add type="System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService, System.Workflow.Runtime, Version=3.0.00000.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" maxSimultaneousWorkflows="5" />
      <!-- Comment the following two lines when running on oracle. -->
      <add type="System.Workflow.Runtime.Hosting.SharedConnectionWorkflowCommitWorkBatchService, System.Workflow.Runtime, Version=3.0.00000.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <add type="System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService, System.Workflow.Runtime, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" UnloadOnIdle="true" />
      <!-- Uncomment the following two lines when running on oracle. -->
      <!--<add name="oracle" providerName="Oracle.DataAccess.Client" type="WFTools.Services.Persistence.Ado.AdoPersistenceService, EPiServer.WFTools.Services,Culture=neutral" UnloadOnIdle="true" connectionStringName="EPiServerDB_oracle"/>
      <add type="WFTools.Services.Batching.Ado.AdoWorkBatchService, EPiServer.WFTools.Services" connectionStringName="EPiServerDB_oracle"/>-->
    </Services>
  </workflowRuntime>
  <runtime>
    <assemblyBinding>
      <dependentAssembly />
    </assemblyBinding>
  </runtime>
  <!-- Connection string info is stored in a separate file -->
  <connectionStrings configSource="connectionStrings.config" />
  <!-- SMTP Settings for ASP.NET 2.0 Mail classes. -->
  <system.net>
    <mailSettings>
      <smtp deliveryMethod="PickupDirectoryFromIis" />
      <!-- Common usage is to use other network existing mail server other than
                 IIS Virtual SMTP Server. 
                 In such cases use the commented settings below with your server
                 location and authentication credentials.
                 -->
      <!--<smtp from="localhost" deliveryMethod="Network">
                <network host="localhost" port="25" userName="" password="" defaultCredentials="false" />
      </smtp>-->
    </mailSettings>
  </system.net>
  <system.web>
    <roleManager enabled="true" defaultProvider="WindowsRoleProvider" cacheRolesInCookie="true">
      <providers>
        <clear />
        <!-- Comment the following lines when running on oracle. -->
        <add name="MultiplexingRoleProvider" type="EPiServer.Security.MultiplexingRoleProvider, EPiServer" provider1="SqlServerRoleProvider" provider2="WindowsRoleProvider" providerMap1="SqlServerMembershipProvider" providerMap2="WindowsMembershipProvider" />
        <!--  comment when running on oracle  -->
        <!-- Uncomment the following lines when running on oracle. -->
        <!--<add provider1="OracleRoleProvider" provider2="WindowsRoleProvider"
        providerMap1="OracleMembershipProvider" providerMap2="WindowsMembershipProvider"
         name="MultiplexingRoleProvider" type="EPiServer.Security.MultiplexingRoleProvider, EPiServer" />-->
        <!--Uncomment the lines above running oracle-->
        <add name="WindowsRoleProvider" applicationName="EPiServerSample" type="EPiServer.Security.WindowsRoleProvider, EPiServer" />
        <add name="SqlServerRoleProvider" connectionStringName="EPiServerDB" applicationName="EPiServerSample" type="System.Web.Security.SqlRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
        <!--<add name="ActiveDirectoryRoleProvider" 
            type="EPiServer.Security.ActiveDirectoryRoleProvider, EPiServer" 
            connectionStringName="ActiveDirectoryProviderConnection" 
            connectionUsername="DOMAIN\ADServiceAccount" 
            connectionPassword="password" 
            attributeMapUsername="sAMAccountName" />-->
      </providers>
    </roleManager>
    <membership defaultProvider="WindowsMembershipProvider" userIsOnlineTimeWindow="10">
      <providers>
        <clear />
        <!-- Comment the following lines when running on oracle. -->
        <add name="MultiplexingMembershipProvider" type="EPiServer.Security.MultiplexingMembershipProvider, EPiServer" provider1="SqlServerMembershipProvider" provider2="WindowsMembershipProvider" />
        <!--  comment the lines above when running on oracle  -->
        <!-- Uncomment the following lines when running on oracle. -->
        <!--<add provider1="OracleMembershipProvider" provider2="WindowsMembershipProvider"
          name="MultiplexingMembershipProvider" type="EPiServer.Security.MultiplexingMembershipProvider, EPiServer" />-->
        <!--Uncomment the lines above running oracle-->
        <add name="WindowsMembershipProvider" type="EPiServer.Security.WindowsMembershipProvider, EPiServer" deletePrefix="BUILTIN\" searchByEmail="true" />
        <add name="SqlServerMembershipProvider" type="System.Web.Security.SqlMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="EPiServerDB" requiresQuestionAndAnswer="false" applicationName="EPiServerSample" requiresUniqueEmail="true" passwordFormat="Hashed" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="7" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="" />
        <!--<add name="ActiveDirectoryMembershipProvider" 
            type="System.Web.Security.ActiveDirectoryMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" 
            connectionStringName="ActiveDirectoryProviderConnection" 
            connectionUsername="DOMAIN\ADServiceAccount" 
            connectionPassword="password" 
            enableSearchMethods="true" 
            attributeMapUsername="sAMAccountName" />-->
      </providers>
    </membership>
    <profile enabled="true" defaultProvider="SqlProfile" automaticSaveEnabled="true">
      <properties>
        <add name="Address" type="System.String" />
        <add name="ZipCode" type="System.String" />
        <add name="Locality" type="System.String" />
        <add name="Email" type="System.String" />
        <add name="FirstName" type="System.String" />
        <add name="LastName" type="System.String" />
        <add name="Language" type="System.String" />
        <add name="Country" type="System.String" />
        <add name="Company" type="System.String" />
        <add name="Title" type="System.String" />
        <add name="SubscriptionInfo" type="EPiServer.Personalization.SubscriptionInfo, EPiServer" />
        <add name="CustomExplorerTreePanel" type="System.String" />
        <add name="FileManagerFavourites" type="System.Collections.Generic.List`1[System.String]" />
        <add name="EditTreeSettings" type="EPiServer.Personalization.GuiSettings, EPiServer" />
        <add name="ClientToolsActivationKey" type="System.String" />
        <add name="FrameworkName" type="System.String" />
      </properties>
      <providers>
        <clear />
        <add name="SqlProfile" type="System.Web.Profile.SqlProfileProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="EPiServerDB" applicationName="EPiServerSample" />
      </providers>
    </profile>
    <httpModules>
      <add name="InitializationModule" type="EPiServer.Framework.Initialization.InitializationModule, EPiServer.Framework" />
      <add name="FirstBeginRequestModule" type="EPiServer.Web.InitializationModule, EPiServer" />
      <!--<add name="BasicAuthentication" type="EPiServer.Security.BasicAuthentication, EPiServer" />-->
      <add name="Initializer" type="EPiServer.Scheduler.Initializer, EPiServer.Scheduler" />
      <add name="WorkflowRuntime" type="EPiServer.WorkflowFoundation.WorkflowSystem, EPiServer.WorkflowFoundation" />
      <add name="UrlRewriteModule" type="EPiServer.Web.UrlRewriteModule, EPiServer" />
      <!--<add name="IIS5WebServicePostModule" type="EPiServer.Web.IIS5WebServicePostModule, EPiServer" />-->
      <add name="ShellRoutingModule" type="EPiServer.Shell.Web.Routing.ShellRoutingModule, EPiServer.Shell" />
    </httpModules>
    <httpHandlers>
      <!--Static files served by EPiServer.Web.StaticFileHandler will have cache information added to Response headers
          so clients can cache files according to passed header information.-->
      <add path="*.png" verb="GET,HEAD" type="EPiServer.Web.StaticFileHandler, EPiServer" />
      <add path="*.jpg" verb="GET,HEAD" type="EPiServer.Web.StaticFileHandler, EPiServer" />
      <add path="*.jpeg" verb="GET,HEAD" type="EPiServer.Web.StaticFileHandler, EPiServer" />
      <add path="*.css" verb="GET,HEAD" type="EPiServer.Web.StaticFileHandler, EPiServer" />
      <add path="*.js" verb="GET,HEAD" type="EPiServer.Web.StaticFileHandler, EPiServer" />
      <add path="*.gif" verb="GET,HEAD" type="EPiServer.Web.StaticFileHandler, EPiServer" />
      <add verb="*" path="*.mvc" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add verb="*" path="UrlRouting.axd" type="System.Web.HttpForbiddenHandler, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    </httpHandlers>
    <!-- DYNAMIC DEBUG COMPILATION
          Set compilation debug="true" to enable ASPX debugging.  Otherwise, setting this value to
          false will improve runtime performance of this application. 
          Set compilation debug="true" to insert debugging symbols (.pdb information)
          into the compiled page. Because this creates a larger file that executes
          more slowly, you should set this value to true only when debugging and to
          false at all other times. For more information, refer to the documentation about
          debugging ASP .NET files.
          -->
    <compilation defaultLanguage="c#" debug="true">
      <assemblies>
        <add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Abstractions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Data.DataSetExtensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Xml.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Data.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
      </assemblies>
    </compilation>
    <!-- CUSTOM ERROR MESSAGES
          Set customError mode values to control the display of user-friendly 
          error messages to users instead of error details (including a stack trace):

          "On" Always display custom (friendly) messages  
          "Off" Always display detailed ASP.NET error information.
          "RemoteOnly" Display custom (friendly) messages only to users not running 
          on the local Web server. This setting is recommended for security purposes, so 
          that you do not display application detail information to remote clients.
          -->
    <customErrors mode="RemoteOnly" />
    <!-- AUTHENTICATION 
    
          !!!! IMPORTANT SECURITY NOTE !!!!!
        
          If you enable forms authentication by uncommenting the Forms authentication information below AND
          you are using Windows 2000 (any version) as web server, you must enable the "Act as part of the
          operating system" user right for the ASPNET user account. If this is not done, you will not be able 
          to logon with windows accounts, only Extranet accounts. However this may be regarded as compromising
          the security on your system since the ASPNET account should be a low-privilege account. 

          This section sets the authentication policies of the application. Possible modes are "Windows", "Forms", 
          "Passport" and "None". However only "Windows" and "Forms" are supported by EPiServer.
          -->
    <!-- authentication mode="Windows" / -->
    <authentication mode="Forms">
      <forms name=".EPiServerLogin" loginUrl="Util/login.aspx" timeout="120" />
    </authentication>
    <!-- APPLICATION-LEVEL TRACE LOGGING
          Application-level tracing enables trace log output for every page within an application. 
          Set trace enabled="true" to enable application trace logging.  If pageOutput="true", the
          trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
          application trace log by browsing the "trace.axd" page from your web application
          root. 
          -->
    <trace enabled="false" requestLimit="10" pageOutput="false" traceMode="SortByTime" localOnly="true" />
    <!-- SESSION STATE SETTINGS
          By default ASP .NET uses cookies to identify which requests belong to a particular session. 
          If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
          To disable cookies, set sessionState cookieless="true".
        -->
    <sessionState mode="InProc" stateConnectionString="tcpip=127.0.0.1:42424" sqlConnectionString="data source=127.0.0.1;user id=sa;password=" cookieless="false" timeout="20" />
    <!-- GLOBALIZATION
          This section sets the globalization settings of the application. 
          -->
    <globalization culture="en-US" uiCulture="en" requestEncoding="utf-8" responseEncoding="utf-8" resourceProviderFactoryType="EPiServer.Resources.XmlResourceProviderFactory, EPiServer" />
    <pages validateRequest="false" enableEventValidation="true" pageParserFilterType="System.Web.Mvc.ViewTypeParserFilter, System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
      <controls>
        <add tagPrefix="EPiServer" namespace="EPiServer.WebControls" assembly="EPiServer" />
        <add tagPrefix="EPiServer" namespace="EPiServer.Web.WebControls" assembly="EPiServer" />
        <add tagPrefix="EPiServer" namespace="EPiServer.Web.WebControls" assembly="EPiServer.Web.WebControls" />
        <add tagPrefix="XForms" namespace="EPiServer.XForms.WebControls" assembly="EPiServer.XForms" />
        <add tagPrefix="WebParts" namespace="EPiServer.WebParts.WebControls" assembly="EPiServer" />
        <add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add tagPrefix="asp" namespace="System.Web.UI.WebControls" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </controls>
      <namespaces>
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Linq" />
        <add namespace="System.Collections.Generic" />
      </namespaces>
    </pages>
    <caching>
      <outputCacheSettings>
        <outputCacheProfiles>
          <add name="ClientResourceCache" enabled="true" duration="3600" varyByParam="*" varyByContentEncoding="gzip;deflate" />
        </outputCacheProfiles>
      </outputCacheSettings>
    </caching>
  </system.web>
  <system.serviceModel>
    <client>
      <!--Client configuration for the ImageEditor, the client name has to be "ImageServiceClientEndPoint"-->
      <!-- Only uncomment if the Image Service is hosted in an external application 
      <endpoint
       name="ImageServiceClientEndPoint"
       address="the address of the hosting application"
       binding="the binding the hosting application is using"
       bindingConfiguration="ImageServiceBinding"
       contract="EPiServer.ImageLibrary.IImageService" />
       -->
      <!-- Uncomment this endpoint and the "RemoteEventServiceEndPoint" to enable remote events
        <endpoint name="RemoteEventServiceClientEndPoint"
           address="soap.udp://239.255.255.19:5000/RemoteEventService"
           binding="customBinding"
           bindingConfiguration="RemoteEventsBinding"
           contract="EPiServer.Events.ServiceModel.IEventReplication" />-->
    </client>
    <bindings>
      <!-- Only uncomment if the Image Service is hosted in an external application 
      <binding type used by the Image Service>
        <binding name="ImageServiceBinding" maxReceivedMessageSize="20000000">
          <readerQuotas maxArrayLength="20000000" />
          <security mode="None" />
        </binding>
      </binding type used by the Image Service>
       -->
      <customBinding>
        <binding name="RemoteEventsBinding">
          <binaryMessageEncoding />
          <udpTransport multicast="True" />
        </binding>
      </customBinding>
    </bindings>
    <extensions>
      <bindingElementExtensions>
        <add name="udpTransport" type="Microsoft.ServiceModel.Samples.UdpTransportElement, EPiServer.Events" />
      </bindingElementExtensions>
    </extensions>
    <services>
      <!-- In order to get fault information from the server for debug purposes, add behaviorConfiguration="DebugServiceBehaviour" to the endpoint "RemoteEventServiceEndPoint" -->
      <service name="EPiServer.Events.Remote.EventReplication">
        <!-- Uncomment this endpoint and the "RemoteEventServiceClientEndPoint" to enable remote events
            <endpoint name="RemoteEventServiceEndPoint"
                    contract="EPiServer.Events.ServiceModel.IEventReplication"
                    binding="customBinding"
                    bindingConfiguration="RemoteEventsBinding"
                    address="soap.udp://239.255.255.19:5000/RemoteEventService" />-->
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior name="DebugServiceBehaviour">
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true">
      <add name="InitializationModule" type="EPiServer.Framework.Initialization.InitializationModule, EPiServer.Framework" preCondition="managedHandler" />
      <add name="FirstBeginRequestModule" type="EPiServer.Web.InitializationModule, EPiServer" preCondition="managedHandler" />
      <add name="Initializer" type="EPiServer.Scheduler.Initializer, EPiServer.Scheduler" preCondition="managedHandler" />
      <add name="WorkflowRuntime" type="EPiServer.WorkflowFoundation.WorkflowSystem, EPiServer.WorkflowFoundation" preCondition="managedHandler" />
      <add name="UrlRewriteModule" type="EPiServer.Web.UrlRewriteModule, EPiServer" preCondition="managedHandler" />
      <add name="ShellRoutingModule" type="EPiServer.Shell.Web.Routing.ShellRoutingModule, EPiServer.Shell" />
    </modules>
    <handlers>
      <add name="UrlRoutingHandler" preCondition="integratedMode" verb="*" path="UrlRouting.axd" type="System.Web.HttpForbiddenHandler, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    </handlers>
    <staticContent>
      <clientCache cacheControlMode="UseMaxAge" cacheControlMaxAge="1.00:00:00">
      </clientCache>
    </staticContent>
    <caching>
      <profiles>
        <add extension=".gif" policy="DontCache" kernelCachePolicy="CacheUntilChange" duration="0.00:01:00" location="Any" />
        <add extension=".png" policy="DontCache" kernelCachePolicy="CacheUntilChange" duration="0.00:01:00" location="Any" />
        <add extension=".js" policy="DontCache" kernelCachePolicy="CacheUntilChange" duration="0.00:01:00" location="Any" />
        <add extension=".css" policy="DontCache" kernelCachePolicy="CacheUntilChange" duration="0.00:01:00" location="Any" />
        <add extension=".jpg" policy="DontCache" kernelCachePolicy="CacheUntilChange" duration="0.00:01:00" location="Any" />
        <add extension=".jpeg" policy="DontCache" kernelCachePolicy="CacheUntilChange" duration="0.00:01:00" location="Any" />
      </profiles>
    </caching>
  </system.webServer>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CSharp.CSharpCodeProvider,System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" warningLevel="4">
        <providerOption name="CompilerVersion" value="v3.5" />
        <providerOption name="WarnAsError" value="false" />
      </compiler>
    </compilers>
  </system.codedom>
  <microsoft.web.services3>
    <messaging>
      <transports>
        <add scheme="soap.tcp">
          <defaultPort value="8082" />
        </add>
      </transports>
    </messaging>
  </microsoft.web.services3>
  <location path="PageFiles">
    <system.web>
      <!-- Make sure that the WebResource loader of ASP.NET is initialized correctly -->
      <!-- Setup the StaticFileHandler for the wildcard mapping to work in IIS6 -->
      <httpHandlers>
        <add path="WebResource.axd" verb="GET" type="System.Web.Handlers.AssemblyResourceLoader" validate="true" />
        <add path="*" verb="*" type="EPiServer.Web.StaticFileHandler, EPiServer" validate="true" />
      </httpHandlers>
    </system.web>
    <system.webServer>
      <validation validateIntegratedModeConfiguration="false" />
      <handlers>
        <add name="webresources" path="WebResource.axd" verb="GET" type="System.Web.Handlers.AssemblyResourceLoader" />
        <add name="wildcard" path="*" verb="*" type="EPiServer.Web.StaticFileHandler, EPiServer" />
      </handlers>
    </system.webServer>
    <staticFile expirationTime="-1.0:0:0" />
  </location>
  <location path="Documents">
    <system.web>
      <!-- Setup the StaticFileHandler for the wildcard mapping to work in IIS6 -->
      <httpHandlers>
        <add path="WebResource.axd" verb="GET" type="System.Web.Handlers.AssemblyResourceLoader" validate="true" />
        <add path="*" verb="*" type="EPiServer.Web.StaticFileHandler, EPiServer" validate="true" />
      </httpHandlers>
    </system.web>
    <system.webServer>
      <validation validateIntegratedModeConfiguration="false" />
      <handlers>
        <add name="webresources" path="WebResource.axd" verb="GET" type="System.Web.Handlers.AssemblyResourceLoader" />
        <add name="wildcard" path="*" verb="*" type="EPiServer.Web.StaticFileHandler, EPiServer" />
      </handlers>
    </system.webServer>
    <staticFile expirationTime="-1.0:0:0" />
  </location>
  <location path="Global">
    <system.web>
      <!-- Setup the StaticFileHandler for the wildcard mapping to work in IIS6 -->
      <httpHandlers>
        <add path="WebResource.axd" verb="GET" type="System.Web.Handlers.AssemblyResourceLoader" validate="true" />
        <add path="*" verb="*" type="EPiServer.Web.StaticFileHandler, EPiServer" validate="true" />
      </httpHandlers>
    </system.web>
    <system.webServer>
      <validation validateIntegratedModeConfiguration="false" />
      <handlers>
        <add name="webresources" path="WebResource.axd" verb="GET" type="System.Web.Handlers.AssemblyResourceLoader" />
        <add name="wildcard" path="*" verb="*" type="EPiServer.Web.StaticFileHandler, EPiServer" />
      </handlers>
    </system.webServer>
    <staticFile expirationTime="-1.0:0:0" />
  </location>
  <location path="EPiServer">
    <system.web>
      <httpHandlers>
        <clear />
        <!-- This section is copied from root web.config -->
        <add path="WebResource.axd" verb="GET" type="System.Web.Handlers.AssemblyResourceLoader" validate="true" />
        <add path="*.aspx" verb="*" type="System.Web.UI.PageHandlerFactory" validate="true" />
        <add path="*.ashx" verb="*" type="System.Web.UI.SimpleHandlerFactory" validate="true" />
        <add path="*.asmx" verb="*" type="System.Web.Services.Protocols.WebServiceHandlerFactory, System.Web.Services, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" validate="false" />
        <add path="*.ascx" verb="*" type="System.Web.HttpForbiddenHandler" validate="true" />
        <add path="*" verb="*" type="EPiServer.Web.StaticFileHandler, EPiServer" validate="true" />
      </httpHandlers>
      <httpRuntime maxRequestLength="1000000" />
      <pages enableEventValidation="true">
        <controls>
          <add tagPrefix="EPiServerUI" namespace="EPiServer.UI.WebControls" assembly="EPiServer.UI" />
          <add tagPrefix="EPiServerScript" namespace="EPiServer.ClientScript.WebControls" assembly="EPiServer" />
          <add tagPrefix="EPiServerScript" namespace="EPiServer.UI.ClientScript.WebControls" assembly="EPiServer.UI" />
        </controls>
      </pages>
      <globalization requestEncoding="utf-8" responseEncoding="utf-8" />
      <authorization>
        <allow roles="WebEditors, WebAdmins, Administrators" />
        <deny users="*" />
      </authorization>
    </system.web>
    <system.webServer>
      <validation validateIntegratedModeConfiguration="false" />
      <handlers>
        <clear />
        <add name="webresources" path="WebResource.axd" verb="GET" type="System.Web.Handlers.AssemblyResourceLoader" />
        <add name="PageHandlerFactory-Integrated" path="*.aspx" verb="GET,HEAD,POST,DEBUG" type="System.Web.UI.PageHandlerFactory" modules="ManagedPipelineHandler" scriptProcessor="" resourceType="Unspecified" requireAccess="Script" allowPathInfo="false" preCondition="integratedMode" responseBufferLimit="4194304" />
        <add name="SimpleHandlerFactory-Integrated" path="*.ashx" verb="GET,HEAD,POST,DEBUG" type="System.Web.UI.SimpleHandlerFactory" modules="ManagedPipelineHandler" scriptProcessor="" resourceType="Unspecified" requireAccess="Script" allowPathInfo="false" preCondition="integratedMode" responseBufferLimit="4194304" />
        <add name="WebServiceHandlerFactory-Integrated" path="*.asmx" verb="GET,HEAD,POST,DEBUG" type="System.Web.Services.Protocols.WebServiceHandlerFactory, System.Web.Services, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" modules="ManagedPipelineHandler" scriptProcessor="" resourceType="Unspecified" requireAccess="Script" allowPathInfo="false" preCondition="integratedMode" responseBufferLimit="4194304" />
        <add name="wildcard" path="*" verb="*" type="EPiServer.Web.StaticFileHandler, EPiServer" />
      </handlers>
    </system.webServer>
  </location>
  <location path="EPiServer/CMS/admin">
    <system.web>
      <authorization>
        <allow roles="WebAdmins, Administrators" />
        <deny users="*" />
      </authorization>
    </system.web>
  </location>
  <!-- 
    Uncomment the following section replace UI in the path attribute with your customized UI path 
    to enable Office integration in the application. 
  -->
  <!--<location path="EPiServer/CMS/OfficeIntegration">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>-->
  <location path="WebServices">
    <!-- 
      Configure the EPiServer.Security.BasicAuthentication module to send a basic authentication challenge 
      instead of a redirect to the forms login page. For this to take effect the EPiServer.Security.BasicAuthentication
      module must be added to the list of http modules.
    -->
    <episerver.basicAuthentication sendBasicChallenge="true" basicRealm="" />
    <system.web>
      <httpRuntime maxRequestLength="1000000" />
      <authorization>
        <allow roles="WebServices,Administrators" />
        <deny users="*" />
      </authorization>
    </system.web>
    <system.webServer>
      <validation validateIntegratedModeConfiguration="false" />
      <handlers>
        <clear />
        <add name="webresources" path="WebResource.axd" verb="GET" type="System.Web.Handlers.AssemblyResourceLoader" />
        <add name="WebServiceHandlerFactory-Integrated" path="*.asmx" verb="GET,HEAD,POST,DEBUG" type="System.Web.Services.Protocols.WebServiceHandlerFactory, System.Web.Services, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" modules="ManagedPipelineHandler" scriptProcessor="" resourceType="Unspecified" requireAccess="Script" allowPathInfo="false" preCondition="integratedMode" responseBufferLimit="4194304" />
        <add name="wildcard" path="*" verb="*" type="EPiServer.Web.StaticFileHandler, EPiServer" />
      </handlers>
    </system.webServer>
  </location>
  <location path="util">
    <system.web>
      <pages enableEventValidation="true">
        <controls>
          <add tagPrefix="EPiServerUI" namespace="EPiServer.UI.WebControls" assembly="EPiServer.UI" />
          <add tagPrefix="EPiServerScript" namespace="EPiServer.ClientScript.WebControls" assembly="EPiServer" />
        </controls>
      </pages>
      <globalization requestEncoding="utf-8" responseEncoding="utf-8" />
      <httpHandlers>
        <add path="WebResource.axd" verb="GET" type="System.Web.Handlers.AssemblyResourceLoader" validate="true" />
        <add path="*.aspx" verb="*" type="System.Web.UI.PageHandlerFactory" validate="true" />
        <add path="*.ashx" verb="*" type="System.Web.UI.SimpleHandlerFactory" validate="true" />
        <add path="*.asmx" verb="*" type="System.Web.Services.Protocols.WebServiceHandlerFactory, System.Web.Services, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" validate="false" />
        <add path="*" verb="*" type="EPiServer.Web.StaticFileHandler, EPiServer" validate="true" />
      </httpHandlers>
    </system.web>
    <system.webServer>
      <validation validateIntegratedModeConfiguration="false" />
      <handlers>
        <clear />
        <add name="webresources" path="WebResource.axd" verb="GET" type="System.Web.Handlers.AssemblyResourceLoader" />
        <add name="PageHandlerFactory-Integrated" path="*.aspx" verb="GET,HEAD,POST,DEBUG" type="System.Web.UI.PageHandlerFactory" modules="ManagedPipelineHandler" scriptProcessor="" resourceType="Unspecified" requireAccess="Script" allowPathInfo="false" preCondition="integratedMode" responseBufferLimit="4194304" />
        <add name="SimpleHandlerFactory-Integrated" path="*.ashx" verb="GET,HEAD,POST,DEBUG" type="System.Web.UI.SimpleHandlerFactory" modules="ManagedPipelineHandler" scriptProcessor="" resourceType="Unspecified" requireAccess="Script" allowPathInfo="false" preCondition="integratedMode" responseBufferLimit="4194304" />
        <add name="WebServiceHandlerFactory-Integrated" path="*.asmx" verb="GET,HEAD,POST,DEBUG" type="System.Web.Services.Protocols.WebServiceHandlerFactory, System.Web.Services, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" modules="ManagedPipelineHandler" scriptProcessor="" resourceType="Unspecified" requireAccess="Script" allowPathInfo="false" preCondition="integratedMode" responseBufferLimit="4194304" />
        <add name="wildcard" path="*" verb="*" type="EPiServer.Web.StaticFileHandler, EPiServer" />
      </handlers>
    </system.webServer>
  </location>
  <location path="App_Themes/Default">
    <system.webServer>
      <validation validateIntegratedModeConfiguration="false" />
      <handlers>
        <clear />
        <add name="wildcard" path="*" verb="*" type="EPiServer.Web.StaticFileHandler, EPiServer" />
      </handlers>
    </system.webServer>
  </location>
  <!-- Uncomment the following section to run on Oracle -->
  <!--<wftools.services.common.ado>

    -->
  <!--REQUIRED
			Value Readers - these read data out of ADO.NET recordsets and commands.
			Remove any that are not applicable to your environment.-->
  <!--

    <valueReaders>
      <add providerName="Oracle.DataAccess.Client" type="WFTools.Services.Odp.OdpValueReader,EPiServer.WFTools.Services.Odp" />
    </valueReaders>

    -->
  <!--REQUIRED
			Resource Providers - these provide ADO.NET resources to workflow services.
			Remove any that are not applicable to your environment.-->
  <!--

    <resourceProviders>
      <add providerName="Oracle.DataAccess.Client" type="WFTools.Services.Odp.OdpResourceProvider,EPiServer.WFTools.Services.Odp" />
    </resourceProviders>
  </wftools.services.common.ado>
  <wftools.services.persistence.ado>

    -->
  <!--REQUIRED
			Name Resolvers - these resolve Persistence command names.
			Remove any that are not applicable to your environment.-->
  <!--

    <nameResolvers>
      <add providerName="Oracle.DataAccess.Client" type="WFTools.Services.Odp.Persistence.OdpPersistenceNameResolver,EPiServer.WFTools.Services.Odp" />
    </nameResolvers>
  </wftools.services.persistence.ado>

  <wftools.services.tracking.ado>

    -->
  <!--REQUIRED
			Name Resolvers - these resolve Tracking command names.
			Remove any that are not applicable to your environment.-->
  <!--

    <nameResolvers>
      <add providerName="Oracle.DataAccess.Client" type="WFTools.Services.Odp.Tracking.OdpTrackingNameResolver,EPiServer.WFTools.Services.Odp" />
    </nameResolvers>

    -->
  <!--OPTIONAL
			Resource Accessors - depending on your ADO.NET provider you may not require this section.
			Current custom resource accessors are provided for SQL Server and ODP.NET, if you use
			System.Data.OracleClient or MySql then you won't need this!-->
  <!--

    <resourceAccessors>
      <add providerName="Oracle.DataAccess.Client" type="WFTools.Services.Odp.Tracking.OdpTrackingResourceAccessor,EPiServer.WFTools.Services.Odp" />
    </resourceAccessors>
  </wftools.services.tracking.ado>

  -->
  <!--OPTIONAL
		Workflow Diagnostics - used for logging useful information for debugging purposes-->
  <!--

  <system.diagnostics>
    <switches>
      <add name="System.Workflow.Runtime" value="Off" />
      <add name="System.Workflow.Runtime.Hosting" value="Off" />
      <add name="System.Workflow.Runtime.Tracking" value="Off" />
      <add name="System.Workflow.Activities" value="Off" />
      <add name="System.Workflow.Activities.Rules" value="Off" />
      <add name="System.Workflow LogToTraceListeners" value="1" />
      <add name="System.Workflow LogToFile" value="0" />
    </switches>
  </system.diagnostics>-->
  <episerver.framework configSource="EPiServerFramework.config" />
  <episerver.shell>
    <publicModules rootPath="~/modules/" autoDiscovery="Minimal" />
    <protectedModules rootPath="~/EPiServer/">
      <add name="Shell" />
      <add name="CMS" />
    </protectedModules>
  </episerver.shell>
  <episerver.dataStore>
    <dataStore defaultProvider="EPiServerSQLServerDataStoreProvider">
      <providers>
        <add name="EPiServerSQLServerDataStoreProvider" description="SQL Server implementation of Data Store" type="EPiServer.Data.Dynamic.Providers.SqlServerDataStoreProvider, EPiServer.Data" connectionStringName="EPiServerDB" />
        <add name="EPiServerOracleDataStoreProvider" description="Oracle implementation of Data Store" type="EPiServer.Data.Dynamic.Providers.OracleDataStoreProvider, EPiServer.Data" connectionStringName="EPiServerDB_oracle" />
      </providers>
      <cache defaultProvider="httpCacheProvider">
        <providers>
          <add name="httpCacheProvider" description="Http Cache implementation for DataStore" type="EPiServer.Data.Cache.HttpRuntimeCacheProvider,EPiServer.Data.Cache" />
          <add name="nullCacheProvider" description="Null Cache implementation for DataStore" type="EPiServer.Data.Cache.NullCacheProvider,EPiServer.Data" />
        </providers>
      </cache>
    </dataStore>
  </episerver.dataStore>
  <episerver.search active="false">
    <namedIndexingServices defaultService="">
      <services>
        <!--<add name="{serviceName}" baseUri="{indexingServiceBaseUri}" accessKey="{accessKey}"/>-->
      </services>
    </namedIndexingServices>
    <searchResultFilter defaultInclude="true">
      <providers />
    </searchResultFilter>
  </episerver.search>
</configuration>